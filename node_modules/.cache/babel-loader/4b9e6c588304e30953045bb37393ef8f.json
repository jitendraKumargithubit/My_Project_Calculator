{"ast":null,"code":"// Defining a function called reportWebVitals that takes onPerfEntry as an argument\nconst reportWebVitals = onPerfEntry => {\n  // Checking if onPerfEntry is a function and if so, importing the web-vitals library\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(_ref => {\n      let {\n        getCLS,\n        getFID,\n        getFCP,\n        getLCP,\n        getTTFB\n      } = _ref;\n      // Calling various web-vitals functions and passing onPerfEntry function as argument to measure app performance\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","map":{"version":3,"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"sources":["C:/Users/verma/Downloads/My Project calculator/src/reportWebVitals.js"],"sourcesContent":["// Defining a function called reportWebVitals that takes onPerfEntry as an argument\nconst reportWebVitals = onPerfEntry => {\n  // Checking if onPerfEntry is a function and if so, importing the web-vitals library\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      // Calling various web-vitals functions and passing onPerfEntry function as argument to measure app performance\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"],"mappings":"AAAA;AACA,MAAMA,eAAe,GAAGC,WAAW,IAAI;EACrC;EACA,IAAIA,WAAW,IAAIA,WAAW,YAAYC,QAA1C,EAAoD;IAClD,OAAO,YAAP,EAAqBC,IAArB,CAA0B,QAAiD;MAAA,IAAhD;QAAEC,MAAF;QAAUC,MAAV;QAAkBC,MAAlB;QAA0BC,MAA1B;QAAkCC;MAAlC,CAAgD;MACzE;MACAJ,MAAM,CAACH,WAAD,CAAN;MACAI,MAAM,CAACJ,WAAD,CAAN;MACAK,MAAM,CAACL,WAAD,CAAN;MACAM,MAAM,CAACN,WAAD,CAAN;MACAO,OAAO,CAACP,WAAD,CAAP;IACD,CAPD;EAQD;AACF,CAZD;;AAcA,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}