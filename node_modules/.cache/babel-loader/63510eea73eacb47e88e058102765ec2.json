{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\verma\\\\Downloads\\\\My Project calculator\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// File imports for the calculator application\nimport Navbar from \"./components/Navbar\"; // importing Navbar component\n\nimport \"./calc.css\"; // importing styles for the calculator\n\nimport Buttons from \"./components/Button\"; // importing Buttons component\n\nimport { useState } from \"react\"; // importing React hook for state management\n\nimport Result from \"./components/Result\"; // importing Result component\n// Main App component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Using useState hook to maintain the state for result\n  const [result, setresult] = useState(\"0\"); // Function to handle button click events\n\n  const handleclicks = value => {\n    switch (value) {\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n      case \".\":\n      case \"+\":\n      case \"-\":\n      case \"/\":\n      case \"*\":\n        // If result is \"0\", replace it with the clicked value, otherwise append it to the result\n        if (result === \"0\") {\n          setresult(value);\n        } else {\n          setresult(result + value);\n        }\n\n        break;\n\n      case \"=\":\n        // Evaluate the expression in the result and set the result state to the evaluated value\n        setresult(eval(result));\n        break;\n\n      case \"c\":\n        // Clear the result state\n        setresult(\"\");\n        break;\n\n      case \"+/-\":\n        // Change the sign of the result\n        setresult(parseInt(result, 10) * -1);\n        break;\n\n      case \"%\":\n        // Convert the result to a percentage\n        setresult(parseFloat(result, 10) / 100);\n        break;\n\n      default:\n        break;\n    }\n  }; // Render the Navbar, Result, and Buttons components\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myCalculator\",\n      children: [/*#__PURE__*/_jsxDEV(Result, {\n        result: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        Buttonclicked: handleclicks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n} // Export the App component as default\n\n\n_s(App, \"I2fduHRG5FHjyJHMEZW0/kpqu7M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Buttons","useState","Result","App","result","setresult","handleclicks","value","eval","parseInt","parseFloat"],"sources":["C:/Users/verma/Downloads/My Project calculator/src/App.js"],"sourcesContent":["// File imports for the calculator application\nimport Navbar from \"./components/Navbar\"; // importing Navbar component\nimport \"./calc.css\"; // importing styles for the calculator\nimport Buttons from \"./components/Button\"; // importing Buttons component\nimport { useState } from \"react\"; // importing React hook for state management\nimport Result from \"./components/Result\"; // importing Result component\n\n// Main App component\nfunction App() {\n  \n  // Using useState hook to maintain the state for result\n  const [result, setresult] = useState(\"0\");\n\n  // Function to handle button click events\n  const handleclicks = (value) => {\n    switch (value) {\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n      case \".\":\n      case \"+\":\n      case \"-\":\n      case \"/\":\n      case \"*\":\n        // If result is \"0\", replace it with the clicked value, otherwise append it to the result\n        if (result === \"0\") {\n          setresult(value);\n        } else {\n          setresult(result + value);\n        }\n        break;\n      case \"=\":\n        // Evaluate the expression in the result and set the result state to the evaluated value\n        setresult(eval(result));\n        break;\n      case \"c\":\n        // Clear the result state\n        setresult(\"\");\n        break;\n      case \"+/-\":\n        // Change the sign of the result\n        setresult(parseInt(result, 10) * -1);\n        break;\n      case \"%\":\n        // Convert the result to a percentage\n        setresult(parseFloat(result, 10) / 100);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Render the Navbar, Result, and Buttons components\n  return (\n    <div>\n      <Navbar />\n      <div className=\"myCalculator\">\n        <Result result={result} />\n        <Buttons Buttonclicked={handleclicks} />\n      </div>\n    </div>\n  );\n}\n\n// Export the App component as default\nexport default App;"],"mappings":";;;AAAA;AACA,OAAOA,MAAP,MAAmB,qBAAnB,C,CAA0C;;AAC1C,OAAO,YAAP,C,CAAqB;;AACrB,OAAOC,OAAP,MAAoB,qBAApB,C,CAA2C;;AAC3C,SAASC,QAAT,QAAyB,OAAzB,C,CAAkC;;AAClC,OAAOC,MAAP,MAAmB,qBAAnB,C,CAA0C;AAE1C;;;;AACA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,GAAD,CAApC,CAHa,CAKb;;EACA,MAAMK,YAAY,GAAIC,KAAD,IAAW;IAC9B,QAAQA,KAAR;MACE,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;QACE;QACA,IAAIH,MAAM,KAAK,GAAf,EAAoB;UAClBC,SAAS,CAACE,KAAD,CAAT;QACD,CAFD,MAEO;UACLF,SAAS,CAACD,MAAM,GAAGG,KAAV,CAAT;QACD;;QACD;;MACF,KAAK,GAAL;QACE;QACAF,SAAS,CAACG,IAAI,CAACJ,MAAD,CAAL,CAAT;QACA;;MACF,KAAK,GAAL;QACE;QACAC,SAAS,CAAC,EAAD,CAAT;QACA;;MACF,KAAK,KAAL;QACE;QACAA,SAAS,CAACI,QAAQ,CAACL,MAAD,EAAS,EAAT,CAAR,GAAuB,CAAC,CAAzB,CAAT;QACA;;MACF,KAAK,GAAL;QACE;QACAC,SAAS,CAACK,UAAU,CAACN,MAAD,EAAS,EAAT,CAAV,GAAyB,GAA1B,CAAT;QACA;;MACF;QACE;IAxCJ;EA0CD,CA3CD,CANa,CAmDb;;;EACA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE,QAAC,MAAD;QAAQ,MAAM,EAAEA;MAAhB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,OAAD;QAAS,aAAa,EAAEE;MAAxB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,C,CAED;;;GA/DSH,G;;KAAAA,G;AAgET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}